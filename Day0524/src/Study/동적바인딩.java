package Study;
/*
 * 		동적 바인딩
 * 		"부모 참조 변수를 가지고 자식 객체를 참조하는 것이 도대체 어디에 필요한 가요?"
 * 		-> 여러가지 타입의 객체를 하나의 자료 구조 안에 모아서 처리하려는 경우에 필요
 * 
 * 		instance of연산자
 * 		변수가 가리키는 객체의 실제 타입을 알고 싶으면 instance of 연산자를 사용
 * 
 * 		종단 클래스와 종단 메소드
 * 		종단 클래스(final class)는 상속을 시킬 수 없는 클래스를 말한다.
 * 		종단 클래스가 필요한 이유는 주로 보안상의 이유 때문.
 * 
 * 		상속, 구성
 * 		구성은 클래스가 다른 클래스의 인스턴스를 클래스의 필드로 가지는 디자인 기법이다.
 * 		반면에 상속은 한 객체가 클래스를 상속받아서 부모 객체의 속성과 동작을 획득할 수 있는 기법
 * 
 * 		구성 및 상속은 모두 클래스를 연결하여 코드 재사용성을 제공한다.
 * 		상속과 구성은 객체 지향 개발자가 사용하는 두 가지의 중요한 프로그래밍 기술이다.
 * 		상속은 한 클래스를 다른 클래스에서 파생시키는 반면 구성은 하나의 클래스를 다른 클래스의 합으로 정의한다.
 * 		
 */
public class 동적바인딩 {

}
